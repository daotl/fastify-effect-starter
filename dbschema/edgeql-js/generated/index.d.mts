export * from "./external.mjs";
export { createClient } from "edgedb";
import * as $ from "./reflection.mjs";
import * as $syntax from "./syntax.mjs";
import * as $op from "./operators.mjs";
import _std from "./modules/std.mjs";
import _cal from "./modules/cal.mjs";
import _cfg from "./modules/cfg.mjs";
import _default from "./modules/default.mjs";
import _schema from "./modules/schema.mjs";
import _sys from "./modules/sys.mjs";
import _math from "./modules/math.mjs";
declare const ExportDefault: typeof _std & typeof _default & $.util.OmitDollarPrefixed<typeof $syntax> & typeof $op & {
    "std": typeof _std;
    "cal": typeof _cal;
    "cfg": typeof _cfg;
    "default": typeof _default;
    "schema": typeof _schema;
    "sys": typeof _sys;
    "math": typeof _math;
};
declare const Cardinality: typeof $.Cardinality;
type Cardinality = $.Cardinality;
export type Set<Type extends $.BaseType, Card extends $.Cardinality = $.Cardinality.Many> = $.TypeSet<Type, Card>;
export default ExportDefault;
export { Cardinality };
